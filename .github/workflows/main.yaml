name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-dockerhub-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build, tag, and push image to Docker Hub
        id: build-image
        run: |
          docker build -t raish123/insuranceclaim:latest .
          docker push raish123/insuranceclaim:latest
          echo "::set-output name=image::raish123/insuranceclaim:latest"

  Continuous-Deployment:
    needs: build-and-push-dockerhub-image
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Pull latest image from Docker Hub
        run: |
          docker pull raish123/insuranceclaim:latest

      # - name: Stop and remove container if running
      #   run: |
      #    docker ps -q --filter "name=insuranceclaim" | grep -q . && docker stop insuranceclaim && docker rm -fv insuranceclaim

      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 8080:8080 --ipc="host" --name=insuranceclaim -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.AWS_REGION }}' raish123/insuranceclaim:latest

      - name: Clean previous images and containers
        run: |
          docker system prune -f
